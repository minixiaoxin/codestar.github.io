<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>笔记本安装纯净Ubuntu 22.04 LTS系统全流程</title>
    <link href="/2023/10/12/%E7%AC%94%E8%AE%B0%E6%9C%AC%E5%AE%89%E8%A3%85%E7%BA%AF%E5%87%80Ubuntu%2022.04%20LTS%E7%B3%BB%E7%BB%9F%E5%85%A8%E6%B5%81%E7%A8%8B/"/>
    <url>/2023/10/12/%E7%AC%94%E8%AE%B0%E6%9C%AC%E5%AE%89%E8%A3%85%E7%BA%AF%E5%87%80Ubuntu%2022.04%20LTS%E7%B3%BB%E7%BB%9F%E5%85%A8%E6%B5%81%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[<h1 id="笔记本安装纯净Ubuntu-22-04-LTS系统全流程"><a href="#笔记本安装纯净Ubuntu-22-04-LTS系统全流程" class="headerlink" title="笔记本安装纯净Ubuntu 22.04 LTS系统全流程"></a>笔记本安装纯净Ubuntu 22.04 LTS系统全流程</h1><h2 id="1、镜像下载"><a href="#1、镜像下载" class="headerlink" title="1、镜像下载"></a>1、镜像下载</h2><p>阿里云镜像站下载Ubuntu 22.04 LTS系统镜像：<a href="https://mirrors.aliyun.com/ubuntu-releases/22.04/">https://mirrors.aliyun.com/ubuntu-releases/22.04/</a></p><p><img src="https://raw.githubusercontent.com/minixiaoxin/note-image/master/note-image/image-20221103221343334.png" alt="image-20221103221343334"></p><h2 id="2、启动盘制作"><a href="#2、启动盘制作" class="headerlink" title="2、启动盘制作"></a>2、启动盘制作</h2><p><img src="https://raw.githubusercontent.com/minixiaoxin/note-image/master/note-image/image-20221031235342705.png" alt="image-20221031235342705"></p><p>打开后的镜像在这里：</p><p><img src="https://raw.githubusercontent.com/minixiaoxin/note-image/master/note-image/image-20221031235414003.png" alt="image-20221031235414003"></p><p>点击启动-写入硬盘映像，该步骤<strong>需要管理员</strong>权限：</p><p><img src="https://raw.githubusercontent.com/minixiaoxin/note-image/master/note-image/image-20221031235725870.png" alt="image-20221031235725870"></p><p>镜像文件会自动同步：</p><p>选择对应的磁盘驱动器和写入方式：注意别选错盘，该步骤会对选中盘先进行格式化。</p><p><img src="https://raw.githubusercontent.com/minixiaoxin/note-image/master/note-image/image-20221031235652288.png" alt="image-20221031235652288"></p><p>点击写入，开始制作。大约3-5分钟：</p><p><img src="https://raw.githubusercontent.com/minixiaoxin/note-image/master/note-image/image-20221101201949072.png" alt="image-20221101201949072"></p><p>刻录成功：</p><p><img src="https://raw.githubusercontent.com/minixiaoxin/note-image/master/note-image/image-20221101202254151.png" alt="image-20221101202254151"></p><h2 id="3、系统安装"><a href="#3、系统安装" class="headerlink" title="3、系统安装"></a>3、系统安装</h2><h3 id="3-1、BIOS设置"><a href="#3-1、BIOS设置" class="headerlink" title="3-1、BIOS设置"></a>3-1、BIOS设置</h3><ul><li>SATA工作方式确认</li></ul><p>笔记本开启按<strong>F2</strong>进入BIOS，确保为AHCI模式，之后保存配置重启。</p><p>&#x3D;&#x3D;注：&#x3D;&#x3D;不同品牌笔记本进入BIOS不太一样，本文以戴尔笔记本为例。</p><p><img src="https://raw.githubusercontent.com/minixiaoxin/note-image/master/note-image/image-20221103221825965.png" alt="image-20221103221825965"></p><ul><li>切换U盘启动</li></ul><p>重启按<strong>F12</strong>进入启动方式选择，在UEFI选项中选择USB设备，选中后回车，启动安装。</p><p><img src="https://raw.githubusercontent.com/minixiaoxin/note-image/master/note-image/image-20221103222031067.png" alt="image-20221103222031067"></p><h3 id="3-2、Ubuntu安装引导"><a href="#3-2、Ubuntu安装引导" class="headerlink" title="3-2、Ubuntu安装引导"></a>3-2、Ubuntu安装引导</h3><ul><li>安装界面</li></ul><p>选择<strong>*Try or Install Ubuntu</strong></p><p><img src="https://raw.githubusercontent.com/minixiaoxin/note-image/master/note-image/image-20221103222341452.png" alt="image-20221103222341452"></p><p>进入启动页面</p><p><img src="https://raw.githubusercontent.com/minixiaoxin/note-image/master/note-image/image-20221103222459925.png" alt="image-20221103222459925"></p><ul><li>安装引导</li></ul><p>语言下拉到列表最下方，选择<strong>中文(简体)<strong>，点击</strong>安装Ubuntu</strong></p><p><img src="https://raw.githubusercontent.com/minixiaoxin/note-image/master/note-image/image-20221103222550069.png" alt="image-20221103222550069"></p><ul><li>键盘布局</li></ul><p>两项均选择Chinese，点击继续</p><p><img src="https://raw.githubusercontent.com/minixiaoxin/note-image/master/note-image/image-20221103222703887.png" alt="image-20221103222703887"></p><ul><li>软件安装</li></ul><p>选中正常安装，想节省安装时间，可以取消勾选”<strong>安装Ubuntu时下载更新</strong>“，点击继续</p><p><img src="https://raw.githubusercontent.com/minixiaoxin/note-image/master/note-image/image-20221103222819398.png" alt="image-20221103222819398"></p><ul><li>安装类型</li></ul><p>如果想同Windows共存，选择第一项。此处我需要安装纯Ubuntu系统，选择第二项。点击继续</p><p><img src="https://raw.githubusercontent.com/minixiaoxin/note-image/master/note-image/image-20221103223137388.png" alt="image-20221103223137388"></p><p><strong>注：</strong>如果需要ZFS文件系统，可以在高级特性中选择，添加。</p><p><img src="https://raw.githubusercontent.com/minixiaoxin/note-image/master/note-image/image-20221103223320624.png" alt="image-20221103223320624"></p><ul><li>选择安装盘</li></ul><p>选择需要清除并安装的系统盘，点击继续安装</p><p><img src="https://raw.githubusercontent.com/minixiaoxin/note-image/master/note-image/image-20221103223203877.png" alt="image-20221103223203877"></p><p>提示写入确定弹窗，会进行格式化，点击继续即可：</p><p><img src="https://raw.githubusercontent.com/minixiaoxin/note-image/master/note-image/image-20221103223420973.png" alt="image-20221103223420973"></p><ul><li>时区选择</li></ul><p>搜索选择，上海时区，点击继续</p><p><img src="https://raw.githubusercontent.com/minixiaoxin/note-image/master/note-image/image-20221103223420973.png" alt="image-20221103223420973"></p><ul><li>设置用户名</li></ul><p><img src="https://raw.githubusercontent.com/minixiaoxin/note-image/master/note-image/image-20221103223645533.png" alt="image-20221103223645533"></p><ul><li>进入安装过程</li></ul><p><img src="https://raw.githubusercontent.com/minixiaoxin/note-image/master/note-image/image-20221103223714202.png" alt="image-20221103223714202"></p><p><img src="https://raw.githubusercontent.com/minixiaoxin/note-image/master/note-image/image-20221103223721816.png" alt="image-20221103223721816"></p><ul><li>安装完成启动</li></ul><p>安装完成后需要移除U盘，再启动。</p><p><img src="https://raw.githubusercontent.com/minixiaoxin/note-image/master/note-image/image-20221103223747669.png" alt="image-20221103223747669"></p><p>启动完成，就大功告成啦：</p><p><img src="https://raw.githubusercontent.com/minixiaoxin/note-image/master/note-image/image-20221103223839534.png" alt="image-20221103223839534"></p>]]></content>
    
    
    <categories>
      
      <category>Linux技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>linux系统搭建</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Ubuntu 22.04 LTS静态IP配置及源更新</title>
    <link href="/2023/10/12/Ubuntu%2022.04%20LTS%E9%9D%99%E6%80%81IP%E9%85%8D%E7%BD%AE%E5%8F%8A%E6%BA%90%E6%9B%B4%E6%96%B0/"/>
    <url>/2023/10/12/Ubuntu%2022.04%20LTS%E9%9D%99%E6%80%81IP%E9%85%8D%E7%BD%AE%E5%8F%8A%E6%BA%90%E6%9B%B4%E6%96%B0/</url>
    
    <content type="html"><![CDATA[<h2 id="1、网络模式确认"><a href="#1、网络模式确认" class="headerlink" title="1、网络模式确认"></a>1、网络模式确认</h2><p><strong>注：</strong>以下操作均基于VMWARE虚拟环境，需要确认虚拟网络配置为NAT模式。</p><p>检查方式：编辑——&gt;虚拟网络编辑器，进入到以下页面。配置和记住当前设置的<strong>网关IP、子网掩码、IP段</strong></p><p><img src="https://raw.githubusercontent.com/minixiaoxin/note-image/master/note-image/image-20221007114038651.png" alt="image-20221007114038651"></p><h2 id="2、静态IP配置"><a href="#2、静态IP配置" class="headerlink" title="2、静态IP配置"></a>2、静态IP配置</h2><h3 id="2-1、切换管理员权限"><a href="#2-1、切换管理员权限" class="headerlink" title="2-1、切换管理员权限"></a>2-1、切换管理员权限</h3><p>开启虚拟机，进入到terminal，切换到管理员模式：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">执行后输入登录用户密码</span><br>sudo -i<br><span class="hljs-meta prompt_"># </span><span class="language-bash">初装系统root密码为随机密码，需要自行更改</span><br>passwd root<br><span class="hljs-meta prompt_"># </span><span class="language-bash">按照提示之后输入命令更改密码，提示successful为更新成功</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">之后登录执行以下指令直接进入管理员模式</span><br>su<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/minixiaoxin/note-image/master/note-image/image-20221007144407345.png" alt="image-20221007144407345"></p><h3 id="2-2、修改网络配置"><a href="#2-2、修改网络配置" class="headerlink" title="2-2、修改网络配置"></a>2-2、修改网络配置</h3><p>Ubuntu自17.10版本以来，引入了Netplan网络配置工具，通过netplan进行管理，对应的配置文件如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">新安装的系统建议使用vi或nano编辑器修改文件内容，不支持vim</span><br>vi /etc/netplan/01-network-manager-all.yaml<br>nano /etc/netplan/01-network-manager-all.yaml<br></code></pre></td></tr></table></figure><p>配置内容：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">Let NetworkManager manage all devices on this system</span><br>network:<br>  ethernets:<br>    ens33:<br>      dhcp4: no<br>      dhcp6: no<br>      # 该项可选，不加也可行<br>      optional: true<br>      addresses:<br>      # 静态IP，需要在第一节配置的IP段内<br>       - 192.168.31.103/24<br>      routes:<br>       - to: default<br>       # 网关设置，需要和第一节检查的网关一致<br>         via: 192.168.31.2<br>      nameservers:<br>      # 网关配置格式还可采用该格式，多个地址采用英文逗号相隔<br>      # addresses: [114.114.114.114,8.8.8.8]<br>        addresses:<br>          - 114.114.114.114<br>          - 8.8.8.8<br>        search:<br>          - localhost<br>          - local<br>  version: 2<br>  renderer: NetworkManager<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/minixiaoxin/note-image/master/note-image/image-20221007153350141.png" alt="image-20221007153350141"></p><h3 id="2-3、生效配置"><a href="#2-3、生效配置" class="headerlink" title="2-3、生效配置"></a>2-3、生效配置</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">测试配置；正常如下</span><br>sudo netplan try<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/minixiaoxin/note-image/master/note-image/image-20221007154513775.png" alt="image-20221007154513775"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">应用配置：不报错即可</span><br>sudo netplan apply<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/minixiaoxin/note-image/master/note-image/image-20221007151929466.png" alt="image-20221007151929466"></p><p>检查是否生效：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">ip addr<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/minixiaoxin/note-image/master/note-image/image-20221007151023164.png" alt="image-20221007151023164"></p><p>连通性检查：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">ping www.baidu.com<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/minixiaoxin/note-image/master/note-image/image-20221007151121767.png" alt="image-20221007151121767"></p><h3 id="2-4、常用工具安装"><a href="#2-4、常用工具安装" class="headerlink" title="2-4、常用工具安装"></a>2-4、常用工具安装</h3><p>在系统使用过程中有一些工具为常用工具，建议安装，如vim、net-tools（对应ifconfig指令）、curl。该部分内容自行参考安装。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">vim编辑器，vi的升级版</span><br>apt install vim -y<br><span class="hljs-meta prompt_"># </span><span class="language-bash">ifconfig、netstat命令工具</span><br>apt install net-tools -y<br><span class="hljs-meta prompt_"># </span><span class="language-bash">web服务器请求工具</span><br>apt install curl -y<br><span class="hljs-meta prompt_"># </span><span class="language-bash">执行以下指令一键安装</span><br>apt install vim -y;apt install net-tools -y;apt install curl -y<br></code></pre></td></tr></table></figure><h2 id="3、镜像源更新"><a href="#3、镜像源更新" class="headerlink" title="3、镜像源更新"></a>3、镜像源更新</h2><h3 id="3-1、可用源列表"><a href="#3-1、可用源列表" class="headerlink" title="3-1、可用源列表"></a>3-1、可用源列表</h3><p><strong>注：</strong>不同系统版本设定的源不同，以下针对22.04版本。</p><h4 id="1）清华源"><a href="#1）清华源" class="headerlink" title="1）清华源"></a>1）清华源</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">默认注释了源码镜像以提高 apt update 速度，如有需要可自行取消注释</span><br>deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ jammy main restricted universe multiverse<br><span class="hljs-meta prompt_"># </span><span class="language-bash">deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ jammy main restricted universe multiverse</span><br>deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ jammy-updates main restricted universe multiverse<br><span class="hljs-meta prompt_"># </span><span class="language-bash">deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ jammy-updates main restricted universe multiverse</span><br>deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ jammy-backports main restricted universe multiverse<br><span class="hljs-meta prompt_"># </span><span class="language-bash">deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ jammy-backports main restricted universe multiverse</span><br>deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ jammy-security main restricted universe multiverse<br><span class="hljs-meta prompt_"># </span><span class="language-bash">deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ jammy-security main restricted universe multiverse</span><br></code></pre></td></tr></table></figure><h4 id="2）阿里源"><a href="#2）阿里源" class="headerlink" title="2）阿里源"></a>2）阿里源</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs shell">deb http://mirrors.aliyun.com/ubuntu/ jammy main restricted universe multiverse<br>deb-src http://mirrors.aliyun.com/ubuntu/ jammy main restricted universe multiverse<br>deb http://mirrors.aliyun.com/ubuntu/ jammy-security main restricted universe multiverse<br>deb-src http://mirrors.aliyun.com/ubuntu/ jammy-security main restricted universe multiverse<br>deb http://mirrors.aliyun.com/ubuntu/ jammy-updates main restricted universe multiverse<br>deb-src http://mirrors.aliyun.com/ubuntu/ jammy-updates main restricted universe multiverse<br>deb http://mirrors.aliyun.com/ubuntu/ jammy-proposed main restricted universe multiverse<br>deb-src http://mirrors.aliyun.com/ubuntu/ jammy-proposed main restricted universe multiverse<br>deb http://mirrors.aliyun.com/ubuntu/ jammy-backports main restricted universe multiverse<br>deb-src http://mirrors.aliyun.com/ubuntu/ jammy-backports main restricted universe multiverse<br></code></pre></td></tr></table></figure><h4 id="3）中科大源"><a href="#3）中科大源" class="headerlink" title="3）中科大源"></a>3）中科大源</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs shell">deb https://mirrors.ustc.edu.cn/ubuntu/ jammy main restricted universe multiverse<br>deb-src https://mirrors.ustc.edu.cn/ubuntu/ jammy main restricted universe multiverse<br>deb https://mirrors.ustc.edu.cn/ubuntu/ jammy-updates main restricted universe multiverse<br>deb-src https://mirrors.ustc.edu.cn/ubuntu/ jammy-updates main restricted universe multiverse<br>deb https://mirrors.ustc.edu.cn/ubuntu/ jammy-backports main restricted universe multiverse<br>deb-src https://mirrors.ustc.edu.cn/ubuntu/ jammy-backports main restricted universe multiverse<br>deb https://mirrors.ustc.edu.cn/ubuntu/ jammy-security main restricted universe multiverse<br>deb-src https://mirrors.ustc.edu.cn/ubuntu/ jammy-security main restricted universe multiverse<br>deb https://mirrors.ustc.edu.cn/ubuntu/ jammy-proposed main restricted universe multiverse<br>deb-src https://mirrors.ustc.edu.cn/ubuntu/ jammy-proposed main restricted universe multiverse<br></code></pre></td></tr></table></figure><h4 id="4）网易源"><a href="#4）网易源" class="headerlink" title="4）网易源"></a>4）网易源</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs shell">deb http://mirrors.163.com/ubuntu/ jammy main restricted universe multiverse<br>deb http://mirrors.163.com/ubuntu/ jammy-security main restricted universe multiverse<br>deb http://mirrors.163.com/ubuntu/ jammy-updates main restricted universe multiverse<br>deb http://mirrors.163.com/ubuntu/ jammy-proposed main restricted universe multiverse<br>deb http://mirrors.163.com/ubuntu/ jammy-backports main restricted universe multiverse<br>deb-src http://mirrors.163.com/ubuntu/ jammy main restricted universe multiverse<br>deb-src http://mirrors.163.com/ubuntu/ jammy-security main restricted universe multiverse<br>deb-src http://mirrors.163.com/ubuntu/ jammy-updates main restricted universe multiverse<br>deb-src http://mirrors.163.com/ubuntu/ jammy-proposed main restricted universe multiverse<br>deb-src http://mirrors.163.com/ubuntu/ jammy-backports main restricted universe multiverse<br></code></pre></td></tr></table></figure><h3 id="3-2、更新源"><a href="#3-2、更新源" class="headerlink" title="3-2、更新源"></a>3-2、更新源</h3><p>将原来的源文件进行备份：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">mv /etc/apt/sources.list /etc/apt/sources.list.bak<br></code></pre></td></tr></table></figure><p>新建源文件：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">填入上一节的任意一项可用源，之后执行Esc : 输入wq保存退出</span><br>vi /etc/apt/sources.list<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/minixiaoxin/note-image/master/note-image/image-20221007150111288.png" alt="image-20221007150111288"></p><p>更新软件源：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">apt update -y<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/minixiaoxin/note-image/master/note-image/image-20221007145149148.png" alt="image-20221007145149148"></p>]]></content>
    
    
    <categories>
      
      <category>Linux技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>linux系统搭建</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Linux下CPU压测执行指导</title>
    <link href="/2023/10/12/Linux%E4%B8%8BCPU%E5%8E%8B%E6%B5%8B%E6%89%A7%E8%A1%8C%E6%8C%87%E5%AF%BC/"/>
    <url>/2023/10/12/Linux%E4%B8%8BCPU%E5%8E%8B%E6%B5%8B%E6%89%A7%E8%A1%8C%E6%8C%87%E5%AF%BC/</url>
    
    <content type="html"><![CDATA[<h2 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h2><p>拉起两个进程，执行文件拷贝，输出空文件。可压测到100%，持续执行。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">for i in `seq 1 $(cat /proc/cpuinfo |grep &quot;physical id&quot; |wc -l)`; do dd if=/dev/zero of=/dev/null &amp; done<br></code></pre></td></tr></table></figure><h2 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h2><p>持续计算圆周率，bc命令。可压测到100</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">计算小数点后5000位</span><br>echo &quot;scale=5000; 4*a(1)&quot; | bc -l -q<br></code></pre></td></tr></table></figure><h2 id="方法三"><a href="#方法三" class="headerlink" title="方法三"></a>方法三</h2><p>编写一个循环，可压测到65%左右，持续执行。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">编写一个脚本文件，持续执行该循环，往空文件中写入1。实际不会生成新文件。</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">filename=cputest.sh</span><br>while [ 1 ]<br>do<br>echo 1 &gt;&gt; /dev/null<br>done<br><span class="hljs-meta prompt_"># </span><span class="language-bash">添加执行权限</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">或执行<span class="hljs-built_in">chmod</span> +x cputest.sh</span><br>chmod 777 cputest.sh<br></code></pre></td></tr></table></figure><h2 id="方法四"><a href="#方法四" class="headerlink" title="方法四"></a>方法四</h2><p>模拟用户不断地访问，并发进程，</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">************常规执行*************</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">不会占用过多资源</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">!/bin/bash</span><br>Njob=15    #任务总数<br>for ((i=0; i&lt;$Njob; i++)); do<br>&#123;<br>          echo  &quot;progress $i is sleeping for 3 seconds zzz…&quot;<br>          sleep  3<br>&#125;<br>done<br>echo -e &quot;time-consuming: $SECONDS    seconds&quot;    #显示脚本执行耗时<br><span class="hljs-meta prompt_"># </span><span class="language-bash">************并发执行*************</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">!/bin/bash</span><br>Njob=15<br>for ((i=0; i&lt;$Njob; i++)); do<br>          echo  &quot;progress $i is sleeping for 3 seconds zzz…&quot;<br>          sleep  3 &amp;       #循环内容放到后台执行<br>done<br>wait      #等待循环结束再执行wait后面的内容<br>echo -e &quot;time-consuming: $SECONDS    seconds&quot;    #显示脚本执行耗时<br></code></pre></td></tr></table></figure><h2 id="压测脚本"><a href="#压测脚本" class="headerlink" title="压测脚本"></a>压测脚本</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">!/bin/bash</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">并发运行的最佳实践</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">总进程数</span><br>Sp=2500<br><span class="hljs-meta prompt_"># </span><span class="language-bash">并发数,并发数过大可能造成系统崩溃</span><br>Qp=250<br><span class="hljs-meta prompt_"># </span><span class="language-bash">存放进程的队列</span><br>Qarr=();<br><span class="hljs-meta prompt_"># </span><span class="language-bash">运行进程数</span><br>run=0<br><span class="hljs-meta prompt_"># </span><span class="language-bash">将进程的添加到队列里的函数</span><br>function push() &#123;<br>Qarr=($&#123;Qarr[@]&#125; $1)<br>run=$&#123;#Qarr[@]&#125;<br>&#125;<br><span class="hljs-meta prompt_"># </span><span class="language-bash">检测队列里的进程是否运行完毕</span><br>function check() &#123;<br>oldQ=($&#123;Qarr[@]&#125;)<br>Qarr=()<br>for p in &quot;$&#123;oldQ[@]&#125;&quot;;do<br>if [[ -d &quot;/proc/$p&quot; ]];then<br>Qarr=($&#123;Qarr[@]&#125; $p)<br>fi<br>done<br>run=$&#123;#Qarr[@]&#125;<br>&#125;<br><span class="hljs-meta prompt_"> # </span><span class="language-bash">main</span><br>for((i=0; i&lt;$Sp; i++));do<br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> `<span class="hljs-built_in">seq</span> 500000`; <span class="hljs-keyword">do</span> curl -o /dev/null -s -w %&#123;http_code&#125;:%&#123;time_total&#125; http://www.baidu.com ;<span class="hljs-built_in">echo</span> <span class="hljs-string">&quot; &quot;</span>; <span class="hljs-keyword">done</span></span><br>echo &quot;running $i &quot;<br>sleep 3 &amp;<br>push $!<br>while [[ $run -gt $Qp ]];do<br>check<br>sleep 0.1<br>done<br>done<br>echo -e &quot;time-consuming: $SECONDS seconds&quot; #显示脚本执行耗时<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Linux技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>压力测试</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>我的第一篇文章</title>
    <link href="/2023/10/12/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/"/>
    <url>/2023/10/12/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/</url>
    
    <content type="html"><![CDATA[<p>我的第一篇博客文章</p>]]></content>
    
    
    <categories>
      
      <category>测试内容</category>
      
    </categories>
    
    
    <tags>
      
      <tag>测试文章</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
